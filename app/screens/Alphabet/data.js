export const KANA = [
  {
    en: 'a',
    hiragana: 'あ',
    hiragana_info: 'apple',
    hiragana_src: require('./mnemonics/h_a.png'),
    katakana: 'ア',
    katakana_info: 'axe',
    katakana_src: require('./mnemonics/k_a.png'),
    original_kana_eng: '',
  },
  {
    en: 'u',
    hiragana: 'う',
    hiragana_info: 'uu boxer hit',
    hiragana_src: require('./mnemonics/h_u.png'),
    katakana: 'ウ',
    katakana_info: '',
    katakana_src: require('./mnemonics/k_u.png'),
    original_kana_eng: '',
  },
  {
    en: 'i',
    hiragana: 'い',
    hiragana_info: 'ii',
    hiragana_src: require('./mnemonics/h_i.png'),
    katakana: 'イ',
    katakana_info: 'Igel',
    katakana_src: require('./mnemonics/k_i.png'),
    original_kana_eng: '',
  },
  {
    en: 'e',
    hiragana: 'え',
    hiragana_info: 'Energetic ninja',
    hiragana_src: require('./mnemonics/h_e.png'),
    katakana: 'エ',
    katakana_info: 'Elevator doors',
    katakana_src: require('./mnemonics/k_e.png'),
    original_kana_eng: '',
  },
  {
    en: 'o',
    hiragana: 'お',
    hiragana_info: 'ufO',
    hiragana_src: require('./mnemonics/h_o.png'),
    katakana: 'オ',
    katakana_info: 'Opera singer',
    katakana_src: require('./mnemonics/k_o.png'),
    original_kana_eng: '',
  },
  {
    en: 'ka',
    hiragana: 'か',
    hiragana_info: 'KAtana cutting',
    hiragana_src: require('./mnemonics/h_ka.png'),
    katakana: 'カ',
    katakana_info: '',
    katakana_src: require('./mnemonics/k_ka.png'),
    original_kana_eng: '',
  },
  {
    en: 'ki',
    hiragana: 'き',
    hiragana_info: 'KIy',
    hiragana_src: require('./mnemonics/h_ki.png'),
    katakana: 'キ',
    katakana_info: '',
    katakana_src: require('./mnemonics/k_ki.png'),
    original_kana_eng: '',
  },
  {
    en: 'ku',
    hiragana: 'く',
    hiragana_info: 'KUku',
    hiragana_src: require('./mnemonics/h_ku.png'),
    katakana: 'ク',
    katakana_info: 'KUkavica krilo',
    katakana_src: require('./mnemonics/k_ku.png'),
    original_kana_eng: '',
  },
  {
    en: 'ke',
    hiragana: 'け',
    hiragana_info: 'KEg',
    hiragana_src: require('./mnemonics/h_ke.png'),
    katakana: 'ケ',
    katakana_info: 'K sidEway',
    katakana_src: require('./mnemonics/k_ke.png'),
    original_kana_eng: '',
  },
  {
    en: 'ko',
    hiragana: 'こ',
    hiragana_info: '2 KOi fish',
    hiragana_src: require('./mnemonics/h_ko.png'),
    katakana: 'コ',
    katakana_info: 'KOrner',
    katakana_src: require('./mnemonics/k_ko.png'),
    original_kana_eng: '',
  },
  {
    en: 'ga',
    hiragana: 'が',
    hiragana_info: '',
    hiragana_src: require('./mnemonics/h_ka.png'),
    katakana: 'ガ',
    katakana_info: '',
    katakana_src: require('./mnemonics/k_ka.png'),
    original_kana_eng: 'ka',
  },
  {
    en: 'gi',
    hiragana: 'ぎ',
    hiragana_info: '',
    hiragana_src: require('./mnemonics/h_ki.png'),
    katakana: 'ギ',
    katakana_info: '',
    katakana_src: require('./mnemonics/k_ki.png'),
    original_kana_eng: 'ki',
  },
  {
    en: 'gu',
    hiragana: 'ぐ',
    hiragana_info: '',
    hiragana_src: require('./mnemonics/h_ku.png'),
    katakana: 'グ',
    katakana_info: '',
    katakana_src: require('./mnemonics/k_ku.png'),
    original_kana_eng: 'ku',
  },
  {
    en: 'ge',
    hiragana: 'げ',
    hiragana_info: '',
    hiragana_src: require('./mnemonics/h_ke.png'),
    katakana: 'ゲ',
    katakana_info: '',
    katakana_src: require('./mnemonics/k_ke.png'),
    original_kana_eng: 'ke',
  },
  {
    en: 'go',
    hiragana: 'ご',
    hiragana_info: '',
    hiragana_src: require('./mnemonics/h_ko.png'),
    katakana: 'ゴ',
    katakana_info: '',
    katakana_src: require('./mnemonics/k_ko.png'),
    original_kana_eng: 'ko',
  },
  {
    en: 'sa',
    hiragana: 'さ',
    hiragana_info: '',
    hiragana_src: require('./mnemonics/h_sa.png'),
    katakana: 'サ',
    katakana_info: '',
    katakana_src: require('./mnemonics/k_sa.png'),
    original_kana_eng: '',
  },
  {
    en: 'shi',
    hiragana: 'し',
    hiragana_info: 'fiSHIng hook',
    hiragana_src: require('./mnemonics/h_shi.png'),
    katakana: 'シ',
    katakana_info: 'SHIp sunking',
    katakana_src: require('./mnemonics/k_shi.png'),
    original_kana_eng: '',
  },
  {
    en: 'su',
    hiragana: 'す',
    hiragana_info: 'SU',
    hiragana_src: require('./mnemonics/h_su.png'),
    katakana: 'ス',
    katakana_info: 'SUper skiier',
    katakana_src: require('./mnemonics/k_su.png'),
    original_kana_eng: '',
  },
  {
    en: 'se',
    hiragana: 'せ',
    hiragana_info: 'SEy something',
    hiragana_src: require('./mnemonics/h_se.png'),
    katakana: 'セ',
    katakana_info: '',
    katakana_src: require('./mnemonics/k_se.png'),
    original_kana_eng: '',
  },
  {
    en: 'so',
    hiragana: 'そ',
    hiragana_info: '',
    hiragana_src: require('./mnemonics/h_so.png'),
    katakana: 'ソ',
    katakana_info: '',
    katakana_src: require('./mnemonics/k_so.png'),
    original_kana_eng: '',
  },
  {
    en: 'za',
    hiragana: 'ざ',
    hiragana_info: '',
    hiragana_src: require('./mnemonics/h_sa.png'),
    katakana: 'ザ',
    katakana_info: '',
    katakana_src: require('./mnemonics/k_sa.png'),
    original_kana_eng: 'sa',
  },
  {
    en: 'ji',
    hiragana: 'じ',
    hiragana_info: '',
    hiragana_src: require('./mnemonics/h_shi.png'),
    katakana: 'ジ',
    katakana_info: '',
    katakana_src: require('./mnemonics/k_shi.png'),
    original_kana_eng: 'shi',
  },
  {
    en: 'zu',
    hiragana: 'ず',
    hiragana_info: '',
    hiragana_src: require('./mnemonics/h_su.png'),
    katakana: 'ズ',
    katakana_info: '',
    katakana_src: require('./mnemonics/k_su.png'),
    original_kana_eng: 'su',
  },
  {
    en: 'ze',
    hiragana: 'ぜ',
    hiragana_info: '',
    hiragana_src: require('./mnemonics/h_se.png'),
    katakana: 'ゼ',
    katakana_info: '',
    katakana_src: require('./mnemonics/k_se.png'),
    original_kana_eng: 'se',
  },
  {
    en: 'zo',
    hiragana: 'ぞ',
    hiragana_info: '',
    hiragana_src: require('./mnemonics/h_so.png'),
    katakana: 'ゾ',
    katakana_info: '',
    katakana_src: require('./mnemonics/k_so.png'),
    original_kana_eng: 'so',
  },
  {
    en: 'ta',
    hiragana: 'た',
    hiragana_info: 'Ta',
    hiragana_src: require('./mnemonics/h_ta.png'),
    katakana: 'タ',
    katakana_info: 'Human holding TAblet',
    katakana_src: require('./mnemonics/k_ta.png'),
    original_kana_eng: '',
  },
  {
    en: 'chi',
    hiragana: 'ち',
    hiragana_info: 'angry CHIrleader',
    hiragana_src: require('./mnemonics/h_chi.png'),
    katakana: 'チ',
    katakana_info: 'CHIken',
    katakana_src: require('./mnemonics/k_chi.png'),
    original_kana_eng: '',
  },
  {
    en: 'tsu',
    hiragana: 'つ',
    hiragana_info: '',
    hiragana_src: require('./mnemonics/h_tsu.png'),
    katakana: 'ツ',
    katakana_info: '',
    katakana_src: require('./mnemonics/k_tsu.png'),
    original_kana_eng: '',
  },
  {
    en: 'te',
    hiragana: 'て',
    hiragana_info: 'dog TEil',
    hiragana_src: require('./mnemonics/h_te.png'),
    katakana: 'テ',
    katakana_info: 'TElephone pole',
    katakana_src: require('./mnemonics/k_te.png'),
    original_kana_eng: '',
  },
  {
    en: 'to',
    hiragana: 'と',
    hiragana_info: 'TOrnado',
    hiragana_src: require('./mnemonics/h_to.png'),
    katakana: 'ト',
    katakana_info: 'TOtem pole',
    katakana_src: require('./mnemonics/k_to.png'),
    original_kana_eng: '',
  },
  {
    en: 'da',
    hiragana: 'だ',
    hiragana_info: '',
    hiragana_src: require('./mnemonics/h_ta.png'),
    katakana: 'ダ',
    katakana_info: '',
    katakana_src: require('./mnemonics/k_ta.png'),
    original_kana_eng: 'ta',
  },
  {
    en: 'de',
    hiragana: 'で',
    hiragana_info: '',
    hiragana_src: require('./mnemonics/h_te.png'),
    katakana: 'デ',
    katakana_info: '',
    katakana_src: require('./mnemonics/k_te.png'),
    original_kana_eng: 'te',
  },
  {
    en: 'do',
    hiragana: 'ど',
    hiragana_info: '',
    hiragana_src: require('./mnemonics/h_to.png'),
    katakana: 'ド',
    katakana_info: '',
    katakana_src: require('./mnemonics/k_to.png'),
    original_kana_eng: 'to',
  },
  {
    en: 'na',
    hiragana: 'な',
    hiragana_info: 'kNAt',
    hiragana_src: require('./mnemonics/h_na.png'),
    katakana: 'ナ',
    katakana_info: 'kNAfe with curved blade',
    katakana_src: require('./mnemonics/k_na.png'),
    original_kana_eng: '',
  },
  {
    en: 'ni',
    hiragana: 'に',
    hiragana_info: '',
    hiragana_src: require('./mnemonics/h_ni.png'),
    katakana: 'ニ',
    katakana_info: '',
    katakana_src: require('./mnemonics/k_ni.png'),
    original_kana_eng: '',
  },
  {
    en: 'nu',
    hiragana: 'ぬ',
    hiragana_info: '',
    hiragana_src: require('./mnemonics/h_nu.png'),
    katakana: 'ヌ',
    katakana_info: '',
    katakana_src: require('./mnemonics/k_nu.png'),
    original_kana_eng: '',
  },
  {
    en: 'ne',
    hiragana: 'ね',
    hiragana_info: 'sNEil',
    hiragana_src: require('./mnemonics/h_ne.png'),
    katakana: 'ネ',
    katakana_info: 'NEst in tree',
    katakana_src: require('./mnemonics/k_ne.png'),
    original_kana_eng: '',
  },
  {
    en: 'no',
    hiragana: 'の',
    hiragana_info: 'NO sign',
    hiragana_src: require('./mnemonics/h_no.png'),
    katakana: 'ノ',
    katakana_info: '',
    katakana_src: require('./mnemonics/k_no.png'),
    original_kana_eng: '',
  },
  {
    en: 'ha',
    hiragana: 'は',
    hiragana_info: 'Ha',
    hiragana_src: require('./mnemonics/h_ha.png'),
    katakana: 'ハ',
    katakana_info: 'House roof',
    katakana_src: require('./mnemonics/k_ha.png'),
    original_kana_eng: '',
  },
  {
    en: 'hi',
    hiragana: 'ひ',
    hiragana_info: '',
    hiragana_src: require('./mnemonics/h_hi.png'),
    katakana: 'ヒ',
    katakana_info: '',
    katakana_src: require('./mnemonics/k_hi.png'),
    original_kana_eng: '',
  },
  {
    en: 'fu',
    hiragana: 'ふ',
    hiragana_info: 'mt. FUji',
    hiragana_src: require('./mnemonics/h_fu.png'),
    katakana: 'フ',
    katakana_info: 'tip of FUt',
    katakana_src: require('./mnemonics/k_fu.png'),
    original_kana_eng: '',
  },
  {
    en: 'he',
    hiragana: 'へ',
    hiragana_info: 'poit to HEvean',
    hiragana_src: require('./mnemonics/h_he.png'),
    katakana: 'ヘ',
    katakana_info: '',
    katakana_src: require('./mnemonics/k_he.png'),
    original_kana_eng: '',
  },
  {
    en: 'ho',
    hiragana: 'ほ',
    hiragana_info: 'HOrse face',
    hiragana_src: require('./mnemonics/h_ho.png'),
    katakana: 'ホ',
    katakana_info: 'HOly cross',
    katakana_src: require('./mnemonics/k_ho.png'),
    original_kana_eng: '',
  },
  {
    en: 'ba',
    hiragana: 'ば',
    hiragana_info: '',
    hiragana_src: require('./mnemonics/h_ha.png'),
    katakana: 'バ',
    katakana_info: '',
    katakana_src: require('./mnemonics/k_ha.png'),
    original_kana_eng: 'ha',
  },
  {
    en: 'bi',
    hiragana: 'び',
    hiragana_info: '',
    hiragana_src: require('./mnemonics/h_hi.png'),
    katakana: 'ビ',
    katakana_info: '',
    katakana_src: require('./mnemonics/k_hi.png'),
    original_kana_eng: 'hi',
  },
  {
    en: 'bu',
    hiragana: 'ぶ',
    hiragana_info: '',
    hiragana_src: require('./mnemonics/h_fu.png'),
    katakana: 'ブ',
    katakana_info: '',
    katakana_src: require('./mnemonics/k_fu.png'),
    original_kana_eng: 'fu',
  },
  {
    en: 'be',
    hiragana: 'べ',
    hiragana_info: '',
    hiragana_src: require('./mnemonics/h_he.png'),
    katakana: 'ベ',
    katakana_info: '',
    katakana_src: require('./mnemonics/k_he.png'),
    original_kana_eng: 'he',
  },
  {
    en: 'bo',
    hiragana: 'ぼ',
    hiragana_info: '',
    hiragana_src: require('./mnemonics/h_ho.png'),
    katakana: 'ボ',
    katakana_info: '',
    katakana_src: require('./mnemonics/k_ho.png'),
    original_kana_eng: 'ho',
  },
  {
    en: 'pa',
    hiragana: 'ぱ',
    hiragana_info: '',
    hiragana_src: require('./mnemonics/h_ha.png'),
    katakana: 'パ',
    katakana_info: '',
    katakana_src: require('./mnemonics/k_ha.png'),
    original_kana_eng: 'ha',
  },
  {
    en: 'pi',
    hiragana: 'ぴ',
    hiragana_info: '',
    hiragana_src: require('./mnemonics/h_hi.png'),
    katakana: 'ピ',
    katakana_info: '',
    katakana_src: require('./mnemonics/k_hi.png'),
    original_kana_eng: 'hi',
  },
  {
    en: 'pu',
    hiragana: 'ぷ',
    hiragana_info: '',
    hiragana_src: require('./mnemonics/h_fu.png'),
    katakana: 'プ',
    katakana_info: '',
    katakana_src: require('./mnemonics/k_fu.png'),
    original_kana_eng: 'fu',
  },
  {
    en: 'pe',
    hiragana: 'ぺ',
    hiragana_info: '',
    hiragana_src: require('./mnemonics/h_he.png'),
    katakana: 'ペ',
    katakana_info: '',
    katakana_src: require('./mnemonics/k_he.png'),
    original_kana_eng: 'he',
  },
  {
    en: 'po',
    hiragana: 'ぽ',
    hiragana_info: '',
    hiragana_src: require('./mnemonics/h_ho.png'),
    katakana: 'ポ',
    katakana_info: '',
    katakana_src: require('./mnemonics/k_ho.png'),
    original_kana_eng: 'ho',
  },
  {
    en: 'ma',
    hiragana: 'ま',
    hiragana_info: 'MAsk man',
    hiragana_src: require('./mnemonics/h_ma.png'),
    katakana: 'マ',
    katakana_info: 'MAnta ray',
    katakana_src: require('./mnemonics/k_ma.png'),
    original_kana_eng: '',
  },
  {
    en: 'mi',
    hiragana: 'み',
    hiragana_info: '',
    hiragana_src: require('./mnemonics/h_mi.png'),
    katakana: 'ミ',
    katakana_info: '',
    katakana_src: require('./mnemonics/k_mi.png'),
    original_kana_eng: '',
  },
  {
    en: 'mu',
    hiragana: 'む',
    hiragana_info: 'MUuu',
    hiragana_src: require('./mnemonics/h_mu.png'),
    katakana: 'ム',
    katakana_info: '',
    katakana_src: require('./mnemonics/k_mu.png'),
    original_kana_eng: '',
  },
  {
    en: 'me',
    hiragana: 'め',
    hiragana_info: 'noodles are a MEss',
    hiragana_src: require('./mnemonics/h_me.png'),
    katakana: 'メ',
    katakana_info: 'MEil',
    katakana_src: require('./mnemonics/k_me.png'),
    original_kana_eng: '',
  },
  {
    en: 'mo',
    hiragana: 'も',
    hiragana_info: 'MOnster lizard',
    hiragana_src: require('./mnemonics/h_mo.png'),
    katakana: 'モ',
    katakana_info: '',
    katakana_src: require('./mnemonics/k_mo.png'),
    original_kana_eng: '',
  },
  {
    en: 'ya',
    hiragana: 'や',
    hiragana_info: 'YAk',
    hiragana_src: require('./mnemonics/h_ya.png'),
    katakana: 'ヤ',
    katakana_info: '',
    katakana_src: require('./mnemonics/k_ya.png'),
    original_kana_eng: '',
  },
  {
    en: 'yu',
    hiragana: 'ゆ',
    hiragana_info: 'YUnicorn head',
    hiragana_src: require('./mnemonics/h_yu.png'),
    katakana: 'ユ',
    katakana_info: 'U boat periscope',
    katakana_src: require('./mnemonics/k_yu.png'),
    original_kana_eng: '',
  },
  {
    en: 'yo',
    hiragana: 'よ',
    hiragana_info: 'YOyo',
    hiragana_src: require('./mnemonics/h_yo.png'),
    katakana: 'ヨ',
    katakana_info: 'YOke',
    katakana_src: require('./mnemonics/k_yo.png'),
    original_kana_eng: '',
  },
  {
    en: 'ra',
    hiragana: 'ら',
    hiragana_info: 'RAbbit',
    hiragana_src: require('./mnemonics/h_ra.png'),
    katakana: 'ラ',
    katakana_info: 'ROcking chair',
    katakana_src: require('./mnemonics/k_ra.png'),
    original_kana_eng: '',
  },
  {
    en: 'ri',
    hiragana: 'り',
    hiragana_info: '',
    hiragana_src: require('./mnemonics/h_ri.png'),
    katakana: 'リ',
    katakana_info: '',
    katakana_src: require('./mnemonics/k_ri.png'),
    original_kana_eng: '',
  },
  {
    en: 'ru',
    hiragana: 'る',
    hiragana_info: 'holding RUby in hand',
    hiragana_src: require('./mnemonics/h_ru.png'),
    katakana: 'ル',
    katakana_info: 'RUts of tree',
    katakana_src: require('./mnemonics/k_ru.png'),
    original_kana_eng: '',
  },
  {
    en: 're',
    hiragana: 'れ',
    hiragana_info: '',
    hiragana_src: require('./mnemonics/h_re.png'),
    katakana: 'レ',
    katakana_info: '',
    katakana_src: require('./mnemonics/k_re.png'),
    original_kana_eng: '',
  },
  {
    en: 'ro',
    hiragana: 'ろ',
    hiragana_info: 'RObbed (from RU)',
    hiragana_src: require('./mnemonics/h_ro.png'),
    katakana: 'ロ',
    katakana_info: 'RObot',
    katakana_src: require('./mnemonics/k_ro.png'),
    original_kana_eng: '',
  },
  {
    en: 'wa',
    hiragana: 'わ',
    hiragana_info: 'white sWAn',
    hiragana_src: require('./mnemonics/h_wa.png'),
    katakana: 'ワ',
    katakana_info: 'WAne glass',
    katakana_src: require('./mnemonics/k_wa.png'),
    original_kana_eng: '',
  },
  {
    en: 'wo',
    hiragana: 'を',
    hiragana_info: '',
    hiragana_src: require('./mnemonics/h_wo.png'),
    katakana: 'ヲ',
    katakana_info: '',
    katakana_src: require('./mnemonics/k_wo.png'),
    original_kana_eng: '',
  },
  {
    en: 'n',
    hiragana: 'ん',
    hiragana_info: '',
    hiragana_src: require('./mnemonics/h_n.png'),
    katakana: 'ン',
    katakana_info: '',
    katakana_src: require('./mnemonics/k_n.png'),
    original_kana_eng: '',
  },
];

export const CONTRACTED_HIRAGANA = [
  {
    row: 'き',
    col: 'や',
    contracted: 'きゃ',
    romaji: 'kya',
  },
  {
    row: 'き',
    col: 'ゆ',
    contracted: 'きゆ',
    romaji: 'kyu',
  },
  {
    row: 'き',
    col: 'ょ',
    contracted: 'きょ',
    romaji: 'kyo',
  },
  {
    row: 'し*',
    col: 'や',
    contracted: 'しゃ',
    romaji: 'sha',
  },
  {
    row: 'し*',
    col: 'ゆ',
    contracted: 'しゆ',
    romaji: 'shu',
  },
  {
    row: 'し*',
    col: 'ょ',
    contracted: 'しょ',
    romaji: 'sho',
  },
  {
    row: 'ち*',
    col: 'や',
    contracted: 'ちゃ',
    romaji: 'cha',
  },
  {
    row: 'ち*',
    col: 'ゆ',
    contracted: 'ちゆ',
    romaji: 'chu',
  },
  {
    row: 'ち*',
    col: 'ょ',
    contracted: 'ちょ',
    romaji: 'cho',
  },
  {
    row: 'に',
    col: 'や',
    contracted: 'にゃ',
    romaji: 'nya',
  },
  {
    row: 'に',
    col: 'ゆ',
    contracted: 'にゆ',
    romaji: 'nyu',
  },
  {
    row: 'に',
    col: 'ょ',
    contracted: 'にょ',
    romaji: 'nyo',
  },
  {
    row: 'み',
    col: 'や',
    contracted: 'みゃ',
    romaji: 'mya',
  },
  {
    row: 'み',
    col: 'ゆ',
    contracted: 'みゆ',
    romaji: 'myu',
  },
  {
    row: 'み',
    col: 'ょ',
    contracted: 'みょ',
    romaji: 'myo',
  },
  {
    row: 'ひ',
    col: 'や',
    contracted: 'ひゃ',
    romaji: 'hya',
  },
  {
    row: 'ひ',
    col: 'ゆ',
    contracted: 'ひゆ',
    romaji: 'hyu',
  },
  {
    row: 'ひ',
    col: 'ょ',
    contracted: 'ひょ',
    romaji: 'hyo',
  },
  {
    row: 'り',
    col: 'や',
    contracted: 'りゃ',
    romaji: 'rya',
  },
  {
    row: 'り',
    col: 'ゆ',
    contracted: 'りゆ',
    romaji: 'ryu',
  },
  {
    row: 'り',
    col: 'ょ',
    contracted: 'りょ',
    romaji: 'ryo',
  },
  {
    row: 'ぎ',
    col: 'や',
    contracted: 'ぎゃ',
    romaji: 'kya',
  },
  {
    row: 'ぎ',
    col: 'ゆ',
    contracted: 'ぎゆ',
    romaji: 'kyu',
  },
  {
    row: 'ぎ',
    col: 'ょ',
    contracted: 'ぎょ',
    romaji: 'kyo',
  },
  {
    row: 'じ*',
    col: 'や',
    contracted: 'じゃ',
    romaji: 'ja',
  },
  {
    row: 'じ*',
    col: 'ゆ',
    contracted: 'じゆ',
    romaji: 'ju',
  },
  {
    row: 'じ*',
    col: 'ょ',
    contracted: 'じょ',
    romaji: 'jo',
  },
  {
    row: 'び',
    col: 'や',
    contracted: 'びゃ',
    romaji: 'bya',
  },
  {
    row: 'び',
    col: 'ゆ',
    contracted: 'びゆ',
    romaji: 'byu',
  },
  {
    row: 'び',
    col: 'ょ',
    contracted: 'びょ',
    romaji: 'byo',
  },
  {
    row: 'ぴ',
    col: 'や',
    contracted: 'ぴゃ',
    romaji: 'pya',
  },
  {
    row: 'ぴ',
    col: 'ゆ',
    contracted: 'ぴゆ',
    romaji: 'pyu',
  },
  {
    row: 'ぴ',
    col: 'ょ',
    contracted: 'ぴょ',
    romaji: 'pyo',
  },
];

export const CONTRACTED_KATAKANA = [
  {
    row: 'キ',
    col: 'ヤ',
    contracted: 'キヤ',
    romaji: 'kya',
  },
  {
    row: 'キ',
    col: 'ユ',
    contracted: 'キユ',
    romaji: 'kyu',
  },
  {
    row: 'キ',
    col: 'ヨ',
    contracted: 'キヨ',
    romaji: 'kyo',
  },
  {
    row: 'シ*',
    col: 'ヤ',
    contracted: 'シヤ',
    romaji: 'sha',
  },
  {
    row: 'シ*',
    col: 'ユ',
    contracted: 'シユ',
    romaji: 'shu',
  },
  {
    row: 'シ*',
    col: 'ヨ',
    contracted: 'シヨ',
    romaji: 'sho',
  },
  {
    row: 'チ*',
    col: 'ヤ',
    contracted: 'チヤ',
    romaji: 'cha',
  },
  {
    row: 'チ*',
    col: 'ユ',
    contracted: 'チユ',
    romaji: 'chu',
  },
  {
    row: 'チ*',
    col: 'ヨ',
    contracted: 'チヨ',
    romaji: 'cho',
  },
  {
    row: 'ニ',
    col: 'ヤ',
    contracted: 'ニヤ',
    romaji: 'nya',
  },
  {
    row: 'ニ',
    col: 'ユ',
    contracted: 'ニユ',
    romaji: 'nyu',
  },
  {
    row: 'ニ',
    col: 'ヨ',
    contracted: 'ニヨ',
    romaji: 'nyo',
  },
  {
    row: 'ミ',
    col: 'ヤ',
    contracted: 'ミヤ',
    romaji: 'mya',
  },
  {
    row: 'ミ',
    col: 'ユ',
    contracted: 'ミユ',
    romaji: 'myu',
  },
  {
    row: 'ミ',
    col: 'ヨ',
    contracted: 'ミヨ',
    romaji: 'myo',
  },
  {
    row: 'ヒ',
    col: 'ヤ',
    contracted: 'ヒヤ',
    romaji: 'hya',
  },
  {
    row: 'ヒ',
    col: 'ユ',
    contracted: 'ヒユ',
    romaji: 'hyu',
  },
  {
    row: 'ヒ',
    col: 'ヨ',
    contracted: 'ヒヨ',
    romaji: 'hyo',
  },
  {
    row: 'リ',
    col: 'ヤ',
    contracted: 'リヤ',
    romaji: 'rya',
  },
  {
    row: 'リ',
    col: 'ユ',
    contracted: 'リユ',
    romaji: 'ryu',
  },
  {
    row: 'リ',
    col: 'ヨ',
    contracted: 'リヨ',
    romaji: 'ryo',
  },
  {
    row: 'ギ',
    col: 'ヤ',
    contracted: 'ギヤ',
    romaji: 'kya',
  },
  {
    row: 'ギ',
    col: 'ユ',
    contracted: 'ギユ',
    romaji: 'kyu',
  },
  {
    row: 'ギ',
    col: 'ヨ',
    contracted: 'ギヨ',
    romaji: 'kyo',
  },
  {
    row: 'ジ*',
    col: 'ヤ',
    contracted: 'ジヤ',
    romaji: 'ja',
  },
  {
    row: 'ジ*',
    col: 'ユ',
    contracted: 'ジユ',
    romaji: 'ju',
  },
  {
    row: 'ジ*',
    col: 'ヨ',
    contracted: 'ジヨ',
    romaji: 'jo',
  },
  {
    row: 'ビ',
    col: 'ヤ',
    contracted: 'ビヤ',
    romaji: 'bya',
  },
  {
    row: 'ビ',
    col: 'ユ',
    contracted: 'ビユ',
    romaji: 'byu',
  },
  {
    row: 'ビ',
    col: 'ヨ',
    contracted: 'ビヨ',
    romaji: 'byo',
  },
  {
    row: 'ピ',
    col: 'ヤ',
    contracted: 'ピヤ',
    romaji: 'pya',
  },
  {
    row: 'ピ',
    col: 'ユ',
    contracted: 'ピユ',
    romaji: 'pyu',
  },
  {
    row: 'ピ',
    col: 'ヨ',
    contracted: 'ピヨ',
    romaji: 'pyo',
  },
];

export const TYPES = {
  HIRAGANA: 'HIRAGANA',
  KATAKANA: 'KATAKANA',
  CONTRACTED_HIRAGANA: 'CONTRACTED_HIRAGANA',
  CONTRACTED_KATAKANA: 'CONTRACTED_KATAKANA',
};

export const TYPE_NAMES = {
  HIRAGANA: 'Hiragana',
  KATAKANA: 'Katakana',
  CONTRACTED_HIRAGANA: 'Hiragana ghép âm',
  CONTRACTED_KATAKANA: 'Katakana ghép âm',
};

export const getKanaSrc = (item, type) => {
  const en = item.original_kana_eng ? item.original_kana_eng : item.en;
  return type === TYPES.HIRAGANA
    ? `./mnemonics/h_${en}.png`
    : `./mnemonics/k_${en}.png`;
};
